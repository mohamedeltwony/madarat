.hero {
  position: relative;
  height: 100vh; // Changed from 80vh
  min-height: 600px; // Keep min-height as a fallback
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  text-align: center;
  margin-bottom: 0;
  padding-top: 80px;
  overflow: hidden;
}

.backgroundMedia {
  /* Renamed from backgroundImage */
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 0;
  
  // Cinematic zoom effect - starts after page load
  &::after {
    content: '';
    position: absolute;
    top: -10%;
    left: -10%;
    width: 120%;
    height: 120%;
    background: url('/images/hero-background-new.png') center/cover no-repeat;
    z-index: -1;
    opacity: 0;
    transform: scale(1);
    animation-play-state: paused; // Initially paused
  }
}

// Start the animation when loaded class is added to hero
.hero.loaded .backgroundMedia::after {
  opacity: 1;
  animation: cinematicZoom 8s ease-in-out infinite alternate;
  animation-delay: 0.5s; // Small delay after becoming visible
  animation-fill-mode: forwards;
}

.hero.loaded .backgroundMedia {
  // Hide the original background when zoom effect is active
  img, video {
    opacity: 0;
    transition: opacity 0.5s ease;
  }
}

// Cinematic zoom keyframes
@keyframes cinematicZoom {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
  100% {
    transform: scale(1.1);
    opacity: 1;
  }
}

// Debug: Add a visible border to the pseudo-element for testing
.hero.loaded .backgroundMedia::after {
  // Uncomment for debugging - makes the zoom effect visible
  border: 3px solid red !important;
  z-index: 10 !important;
}

// Styles for the video element
.heroVideo {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transform: translate(-50%, -50%);
  z-index: 0; // Keep same z-index as image was
  filter: brightness(0.6); // Adjust brightness if needed
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    to bottom,
    rgba(0, 0, 0, 0.4),
    rgba(0, 0, 0, 0.7)
  );
  z-index: 1;
}

.content {
  position: relative;
  z-index: 2;
  max-width: 800px;
  padding: 0 2rem;
  margin: 0 auto;

  h1 {
    font-family: var(--font-display);
    font-size: 3.5rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  }

  p {
    font-size: 1.25rem;
    line-height: 1.6;
    margin-bottom: 2rem;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
    opacity: 0.9;
  }
}

/* .curve { // Removed styles for the curve element
  position: absolute;
  bottom: -1px;
  left: 0;
  right: 0;
  height: 150px;
  background: white;
  clip-path: ellipse(50% 60% at 50% 100%);
  z-index: 2;
} */

.featuredButton {
  display: inline-block;
  background: rgba(255, 255, 255, 0.15);
  color: white;
  padding: 0.8rem 2rem;
  border-radius: 30px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  font-size: 1.1rem;
  font-weight: 500;
  text-decoration: none;
  transition: all 0.3s ease;
  backdrop-filter: blur(5px);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);

  &:hover {
    background: rgba(255, 255, 255, 0.25);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-2px);
  }
}

@media (max-width: 768px) {
  .hero {
    min-height: 500px;
  }

  .content {
    h1 {
      font-size: 2.5rem;
    }

    p {
      font-size: 1.1rem;
    }
  }

  .curve {
    height: 100px;
  }
}
