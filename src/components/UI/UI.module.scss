@use 'sass:color';
@use 'src/styles/settings/_colors' as *;
@use 'src/styles/settings/__settings' as *;

// Local breakpoint definitions
$breakpoint-small: 768px;
$breakpoint-medium: 992px;
$breakpoint-large: 1200px;

// SparkleButton
.sparkleButton {
  position: relative;
  padding: 0.8rem 1.5rem;
  background-color: $color-primary;
  color: white;
  border: none;
  border-radius: 0.375rem;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  box-shadow: 0 2px 10px rgba($color-primary, 0.3);
  outline: none;
  z-index: 1;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    box-shadow: none;
  }

  &.fullWidth {
    width: 100%;
  }

  &.hovered:not(:disabled) {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 5px 15px rgba($color-primary, 0.4);
  }

  &:active:not(:disabled) {
    transform: translateY(1px) scale(0.98);
  }

  // Text content
  .buttonContent {
    position: relative;
    z-index: 3;
    display: inline-block;
    pointer-events: none;
  }
}

// Background glow effect
.buttonGlow {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  // Use brand gold color for the gradient
  background: linear-gradient(
    45deg,
    #cc9c64,
    // Brand gold
    color.adjust(#cc9c64, $lightness: 10%),
    // Lighter gold
    color.adjust(#cc9c64, $lightness: -10%),
    // Darker gold
    #cc9c64 // Brand gold
  );
  background-size: 400% 400%;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 1;
  pointer-events: none;

  &.active {
    opacity: 1;
    animation: gradient-animation 3s ease infinite;
  }
}

@keyframes gradient-animation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

// Sparkle element
.sparkle {
  position: absolute;
  pointer-events: none;
  z-index: 2;
}

@keyframes sparkle-float-out {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 0;
  }

  20% {
    transform: scale(1) rotate(15deg);
    opacity: 1;
  }

  100% {
    transform: scale(0) rotate(30deg) translate(10px, -20px);
    opacity: 0;
  }
}

// Glass Card - for Bento boxes
.glassCard {
  background: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(10px);
  border-radius: 0.5rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  overflow: hidden;
  transition:
    transform 0.3s ease,
    box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }
}

// Bento Grid
.bentoGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  grid-auto-rows: minmax(200px, auto);
  gap: 1.5rem;

  @media (min-width: $breakpoint-small) {
    grid-template-columns: repeat(2, 1fr);
  }

  @media (min-width: $breakpoint-medium) {
    grid-template-columns: repeat(3, 1fr);
  }

  @media (min-width: $breakpoint-large) {
    grid-template-columns: repeat(4, 1fr);
  }
}

// Bento Grid Item variants
.bentoItem {
  border-radius: 0.5rem;
  overflow: hidden;

  // Default size (1x1)
  grid-column: span 1;
  grid-row: span 1;

  // Variants
  &.wide {
    @media (min-width: $breakpoint-small) {
      grid-column: span 2;
    }
  }

  &.tall {
    @media (min-width: $breakpoint-small) {
      grid-row: span 2;
    }
  }

  &.large {
    @media (min-width: $breakpoint-small) {
      grid-column: span 2;
      grid-row: span 2;
    }
  }
}
